{"version":3,"sources":["App.js","index.js"],"names":["App","useState","content","isDone","notes","upDateNotes","updateItems","list","keepList","changeListItem","event","value","target","ind","parseInt","id","console","log","deleteItem","prevList","filter","item","index","doneTask","x","updatedList","map","className","name","onChange","prevValue","placeholder","onClick","preventDefault","defaultValue","rootElement","document","getElementById","ReactDOM","render"],"mappings":"qLA2GeA,MAxGf,WACE,MAA6BC,mBAAS,CAACC,QAAU,GAAIC,QAAS,IAA9D,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA6BJ,mBAAS,IAAtC,mBAAcK,GAAd,WACA,EAAyBL,mBAAS,IAAlC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAAiCP,oBAAS,GAA1C,mBASA,SAASQ,EAAeC,GACtB,IAAMC,EAAMD,EAAME,OAAOD,MACzBL,EAAYI,EAAME,OAAOD,OACzB,IAAME,EAAIC,SAASJ,EAAME,OAAOG,GAAI,IACpCR,EAAKM,GAAK,CAACX,QAAQS,EAAMR,OAAOI,EAAKM,GAAKV,QAC1Ca,QAAQC,IAAIV,GAad,SAASW,EAAWR,GAClBF,GAAS,SAACW,GACR,OAAOA,EAASC,QAAO,SAACC,EAAMC,GAC5B,OAAOA,IAAUR,SAASJ,EAAME,OAAOG,GAAI,UAKjD,SAASQ,EAASb,GAChB,IAAMc,EAAEV,SAASJ,EAAME,OAAOG,GAAI,IAC9BU,EAAYlB,EAAKmB,KAAI,SAACL,EAAKC,GAM7B,OALGE,IAAIF,GACFE,IAAIF,IACLD,EAAKlB,QAAQkB,EAAKlB,QAGfkB,KAETb,EAASiB,GACTT,QAAQC,MACRD,QAAQC,IAAIV,GAcd,OA7DA,UA8DE,sBAAKoB,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,SACE,kDAEF,iCACE,uBACEC,KAAK,WACLD,UAAU,WACVE,SApER,SAAsBnB,GACpB,MAAwBA,EAAME,OAAhBD,GAAd,EAAQiB,KAAR,EAAcjB,OACdN,GAAY,SAACyB,GACX,MAAO,CAAC5B,QAASS,EAAOR,OAAO2B,EAAU3B,YAkErC4B,YAAY,aACZpB,MAAOP,EAAMF,UAEf,wBAAQyB,UAAU,YAAYK,QAzDpC,SAAiBtB,GACfA,EAAMuB,iBACNzB,GAAS,SAACW,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBf,OAEvBC,GAAY,SAACyB,GACX,MAAO,CAAC5B,QAAS,GAAIC,OAAO2B,EAAU3B,YAmDpC,kBAIF,oBAAIwB,UAAU,OAAd,SACGpB,EAAKmB,KAAI,SAACL,EAAMC,GACf,OACE,qBAAIK,UAAU,WAAd,UACG,IACD,wBAAQA,UAAU,aAAaK,QAAST,EAAUR,GAAIO,EAAtD,0BAGC,IACAN,QAAQC,IAAII,GACb,uBAAOM,UAAWN,EAAKlB,OAAS,UAAW,YAAayB,KAAK,YAAYC,SAAUpB,EAAgByB,aAAcb,EAAKnB,QAASS,MAAOU,EAAKnB,QAASa,GAAIO,IACxJ,wBAAQK,UAAU,eAAeK,QAASd,EAAYH,GAAIO,EAA1D,4CC3FRa,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.481b5dc7.chunk.js","sourcesContent":["import \"./index.css\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [notes, upDateNotes] = useState({content : \"\", isDone : false});\n  const [items, updateItems] = useState(\"\");\n  const [list, keepList] = useState([]);\n  const [editState, changeState] = useState(false);\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    upDateNotes((prevValue)=>{\n      return {content: value, isDone:prevValue.isDone};\n    });\n  }\n\n  function changeListItem(event){\n    const value=event.target.value;\n    updateItems(event.target.value);\n    const ind=parseInt(event.target.id, 10);\n    list[ind]={content:value,isDone:list[ind].isDone};\n    console.log(list);\n  }\n\n  function addNote(event) {\n    event.preventDefault();\n    keepList((prevList) => {\n      return [...prevList, notes];\n    });\n    upDateNotes((prevValue)=>{\n      return {content: \"\" ,isDone:prevValue.isDone};\n    });\n  }\n\n  function deleteItem(event) {\n    keepList((prevList) => {\n      return prevList.filter((item, index) => {\n        return index !== parseInt(event.target.id, 10);\n      });\n    });\n  }\n\n  function doneTask(event) {\n    const x=parseInt(event.target.id, 10);\n    let updatedList=list.map((item,index)=>{\n      if(x===index){\n        if(x===index){\n          item.isDone=!item.isDone;\n        }\n      }\n      return item;\n    })\n    keepList(updatedList);\n    console.log();\n    console.log(list);\n  }\n\n  function editable(event) {\n    event.preventDefault();\n    changeState((prevValue) => {\n      if (prevValue=== false) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading\">\n        <centre>To do list</centre>\n      </h1>\n      <form>\n        <input\n          name=\"listItem\"\n          className=\"listItem\"\n          onChange={handleChange}\n          placeholder=\"Add a Task\"\n          value={notes.content} \n        />\n        <button className=\"addButton\" onClick={addNote}>\n          +\n        </button>\n      </form>\n      <ul className=\"list\">\n        {list.map((item, index) => {\n          return (\n            <li className=\"listitem\">\n              {\" \"}\n              <button className=\"doneButton\" onClick={doneTask} id={index}>\n                ‚úîÔ∏è\n              </button>\n              {\" \"} \n              {console.log(item)}\n              <input className={item.isDone ? \"striked\": \"inputItem\"} name=\"inputItem\" onChange={changeListItem} defaultValue={item.content} value={item.content} id={index}></input>\n              <button className=\"deletebutton\" onClick={deleteItem} id={index}>\n                üóëÔ∏è\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}